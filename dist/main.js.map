{"version":3,"file":"main.js","mappings":";;;;;;;;;;AAAa;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,mBAAmB,mBAAO,CAAC,0BAAU;AACrC,oCAAoC,mBAAO,CAAC,4BAAW;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA,CAAC;;;;;;;;;;;AC/CD;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://ui-box/./src/main.ts","webpack://ui-box/external node-commonjs \"electron\"","webpack://ui-box/external node-commonjs \"node:path\"","webpack://ui-box/webpack/bootstrap","webpack://ui-box/webpack/before-startup","webpack://ui-box/webpack/startup","webpack://ui-box/webpack/after-startup"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst electron_1 = require(\"electron\");\nconst node_path_1 = __importDefault(require(\"node:path\"));\nfunction createWindow() {\n    const mainWindow = new electron_1.BrowserWindow({\n        // width: 900,\n        width: 850,\n        height: 600,\n        webPreferences: {\n            preload: node_path_1.default.join(__dirname, 'preload.js')\n        }\n    });\n    mainWindow.loadFile('./src/index.html');\n    mainWindow.webContents.openDevTools();\n    mainWindow.removeMenu();\n    electron_1.nativeTheme.on('updated', () => {\n        mainWindow.webContents.send('theme-changed');\n    });\n    electron_1.ipcMain.handle('dark-mode:toggle', () => {\n        if (electron_1.nativeTheme.shouldUseDarkColors) {\n            electron_1.nativeTheme.themeSource = 'light';\n        }\n        else {\n            electron_1.nativeTheme.themeSource = 'dark';\n        }\n        return electron_1.nativeTheme.shouldUseDarkColors;\n    });\n    electron_1.ipcMain.handle('dark-mode:system', () => {\n        electron_1.nativeTheme.themeSource = 'system';\n    });\n    electron_1.ipcMain.handle('dark-mode:get-theme-source', () => {\n        return electron_1.nativeTheme.themeSource;\n    });\n}\nelectron_1.app.whenReady().then(() => {\n    createWindow();\n    electron_1.app.on('activate', function () {\n        if (electron_1.BrowserWindow.getAllWindows().length === 0)\n            createWindow();\n    });\n});\nelectron_1.app.on('window-all-closed', function () {\n    electron_1.app.quit();\n});\n","module.exports = require(\"electron\");","module.exports = require(\"node:path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/main.ts\");\n",""],"names":[],"sourceRoot":""}