{"version":3,"file":"main.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;ACtBa;AACb,QAAQ,2CAA2C,EAAE,mBAAO,CAAC,0BAAU;AACvE,aAAa,mBAAO,CAAC,4BAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA,CAAC","sources":["webpack://ui-box/external node-commonjs \"electron\"","webpack://ui-box/external node-commonjs \"node:path\"","webpack://ui-box/webpack/bootstrap","webpack://ui-box/./src/main.ts"],"sourcesContent":["module.exports = require(\"electron\");","module.exports = require(\"node:path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\nconst { app, ipcMain, BrowserWindow, nativeTheme } = require('electron');\nconst path = require('node:path');\nfunction createWindow() {\n    const mainWindow = new BrowserWindow({\n        // width: 800,\n        // height: 600,\n        width: 850,\n        height: 600,\n        webPreferences: {\n            preload: path.join(__dirname, 'preload.js')\n        }\n    });\n    mainWindow.loadFile('./src/index.html');\n    mainWindow.webContents.openDevTools();\n    mainWindow.removeMenu();\n    //test\n    nativeTheme.on('updated', () => {\n        mainWindow.webContents.send('theme-changed');\n    });\n    //test end\n    ipcMain.handle('dark-mode:toggle', () => {\n        if (nativeTheme.shouldUseDarkColors) {\n            nativeTheme.themeSource = 'light';\n        }\n        else {\n            nativeTheme.themeSource = 'dark';\n        }\n        return nativeTheme.shouldUseDarkColors;\n    });\n    ipcMain.handle('dark-mode:system', () => {\n        nativeTheme.themeSource = 'system';\n    });\n    ipcMain.handle('dark-mode:get-theme-source', () => {\n        return nativeTheme.themeSource;\n    });\n}\napp.whenReady().then(() => {\n    createWindow();\n    app.on('activate', function () {\n        if (BrowserWindow.getAllWindows().length === 0)\n            createWindow();\n    });\n});\napp.on('window-all-closed', function () {\n    app.quit();\n});\n"],"names":[],"sourceRoot":""}