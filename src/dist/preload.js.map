{"version":3,"file":"preload.js","mappings":";;;;;;;;;;AAAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;ACtBA,MAAM,EAAE,aAAa,EAAE,WAAW,EAAE,GAAG,mBAAO,CAAC,0BAAU,CAAC,CAAC;AAE3D,aAAa,CAAC,iBAAiB,CAAC,UAAU,EAAE;IAC1C,WAAW,EAAE,WAAW;CACzB,CAAC,CAAC;AAEH,aAAa,CAAC,iBAAiB,CAAC,UAAU,EAAE;IAC1C,MAAM,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,kBAAkB,CAAC;IACpD,MAAM,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,kBAAkB,CAAC;IACpD,cAAc,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,MAAM,CAAC,4BAA4B,CAAC;IAEtE,qFAAqF;CACtF,CAAC,CAAC","sources":["webpack:///external node-commonjs \"electron\"","webpack:///webpack/bootstrap","webpack:///./src/preload.ts"],"sourcesContent":["module.exports = require(\"electron\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const { contextBridge, ipcRenderer } = require('electron');\n\ncontextBridge.exposeInMainWorld('electron', {\n  ipcRenderer: ipcRenderer,\n});\n\ncontextBridge.exposeInMainWorld('darkMode', {\n  toggle: () => ipcRenderer.invoke('dark-mode:toggle'),\n  system: () => ipcRenderer.invoke('dark-mode:system'),\n  getThemeSource: () => ipcRenderer.invoke('dark-mode:get-theme-source'),\n\n  // onThemeChange: (callback: () => void) => ipcRenderer.on('theme-changed', callback)\n});"],"names":[],"sourceRoot":""}